[tox]
envlist = {test}-{v3,v4}
min_version = 4
requires =
    pip>=23.0.0
isolated_build = True

[testenv]
# pip compile extras and then install
install_command = python -I {opts} .tox-install.py --extras {packages} --env-name {envname} --input-file pyproject.toml

[testenv:lint]
skip_install=True
allowlist_externals=rm
deps =
    ; pyproject.toml extra
    dev-lint

commands =
    flake8 src/
    pipenv lock
    pipenv check
    mypy --install-types
    mypy src/

[testenv:docs]
deps =
    ; pyproject.toml extra
    dev-docs
commands =
    python -m sphinx -b html -a {toxinidir}/docs/source {toxinidir}/docs/html

passenv =
    SPHINX_GITHUB_CHANGELOG_TOKEN

[testenv:build]
deps =
    ; pyproject.toml extra
    dev-build
commands =
    python build
    ; builds wheel and sdist

[testenv:test-{v3,v4}]
deps=
    ; pyproject.toml extra
    v4: dev-testv4
    v3: dev-testv3
commands =
    pytest {posargs: -rs tests/ --log-level=WARNING --cov=azure_devops_artifacts_helpers --cov-report xml:{toxinidir}/reports/{envname}-coverage.xml --junitxml={toxinidir}/reports/{envname}-test.xml}


[testenv:populate]
skip_install = True
deps =
    ; pyproject.toml extra
    dev-populate
commands =
    python populate_wheels.py {posargs}

[testenv:develop]
skip_install = True
envdir = {toxinidir}/.venv
allowlist_externals = tox
commands =
    pip install -e .
    ; populate the wheels as well here
    tox -e populate
    mypy --install-types
deps =
    ; pyproject.toml extras
    dev-lint
    dev-testv4
    dev-build
    dev-docs
    dev-populate
