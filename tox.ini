[tox]
envlist = {test}

[testenv]
install_command = python -I -m pip install artifacts-keyring; python -I -m pip install <opts> <packages>
deps =
    pip>=20.2.0
    -rrequirements.txt
    lint,develop: flake8>=5.0.4
    lint,develop: pipenv
    lint,develop: flake8-import-order>=0.18.2
    lint,develop: flake8-eradicate>=1.3.0
    lint,develop: flake8-docstrings>=1.6.0
    test,develop: pytest
    test,develop: pytest-cov
    test,develop: tox
    docs,develop: sphinx
    docs,develop: sphinx_material
    docs,develop: sphinx_github_changelog
    build: wheel
    populate: click

commands =
    lint: flake8 src/
    lint: pipenv lock
    lint: pipenv check
    lint: rm -f Pipfile.lock

    test: pytest {posargs: -rs tests/ --log-level=WARNING --cov=azure_devops_artifacts_helpers --cov-report xml:{toxinidir}/reports/{envname}-coverage.xml --junitxml={toxinidir}/reports/{envname}-test.xml}

    docs: python -m sphinx -b html -a {toxinidir}/docs/source {toxinidir}/docs/html
    populate: python populate_wheels.py {posargs}
    build: python setup.py sdist --format=zip
    build: python setup.py sdist --format=gztar
    build: python setup.py bdist_wheel

    develop: python setup.py develop

passenv =
    docs: SPHINX_GITHUB_CHANGELOG_TOKEN

[testenv:setup_version]
deps = versioneer
commands = versioneer install
skip_install=True

[testenv:lint]
skip_install=True
allowlist_externals=rm
[testenv:populate]
skip_install = True

[testenv:develop]
skip_install = True
envdir = {toxinidir}/.venv
commands = python setup.py develop
