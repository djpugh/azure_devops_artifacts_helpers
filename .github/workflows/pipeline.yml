
name: Pipeline

on:
  push:
    branches-ignore:
      - gh-pages
    tags-ignore:
      - docs-*
  pull_request:
  release:
    types: [published]

jobs:
  lint:
    name: Lint
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Lint
        run: tox -e lint

  test:
    name: Test Python ${{ matrix.py }} - ${{ matrix.os }} - ${{matrix.tox_version}}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        py:
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
        tox_version:
          - v3
          - v4
      max-parallel: 4

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.py }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.py }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U tox setuptools
    - name: Populate platform wheels
      run: tox -e populate -- --py ${{ matrix.py }}
    - name: Setup Test Suite
      run: tox -e test-${{ matrix.tox_version }} -vv --notest
    - name: Run Test Suite
      run: tox -e test-${{ matrix.tox_version }} --skip-pkg-install
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./reports/
        flags: tests
        name: ${{ matrix.py }} - ${{ matrix.os }} - ${{ matrix.tox_version }}
    - name: Configure testspace
      uses: testspace-com/setup-testspace@v1
      with:
        domain: ${{ github.repository_owner }}
      if: always()
    - name: Push result to Testspace server
      run: |
        testspace reports/*-test.xml
      if: always()

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  license-scan:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'

    name: Scan Licenses
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run FOSSA scan and upload build data
        uses: fossa-contrib/fossa-action@v2
        with:
          fossa-api-key: ${{ secrets.FOSSA_API_KEY }}
          github-token: ${{ github.token }}

  codeql-analyze:
    name: CodeQL Analyze
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: python

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  collate-packages:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'
    name: Collate Wheels - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows
      max-parallel: 4

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Populate platform wheels
      run: tox -e populate -- --target-dir ./wheels

    - name: Store collated wheels
      uses: actions/upload-artifact@v3
      with:
        name: wheels-${{matrix.os}}
        path: |
          ./wheels/*

  build:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'
    name: Build Package
    runs-on: ${{ matrix.os }}-latest
    needs:
      - collate-packages
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os:
          - windows
    steps:
      - uses: actions/checkout@v3
        with:
          clean: true
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Download collated wheels
        uses: actions/download-artifact@v3
        with:
          path: wheels

      - shell: bash
        run: cp -u wheels/*/*.whl src/azure_devops_artifacts_helpers/wheels/

      - name: Build azure_devops_artifacts_helpers
        run: tox -e build -vvv

      - name: Store build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            dist/*

  docs:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'
    name: Build docs
    needs:
      - collate-packages
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Download collated wheels
        uses: actions/download-artifact@v3
        with:
          path: wheels

      - shell: bash
        run: cp -u wheels/*/*.whl src/azure_devops_artifacts_helpers/wheels/

      - name: Build docs
        run: tox -e docs
        env:
          SPHINX_GITHUB_CHANGELOG_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Store build artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: |
            docs/html/*

  test-build:
    if: github.event_name == 'pull_request' && contains(github.base_ref, 'main') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'
    name: Test Build Python ${{ matrix.py }} - ${{ matrix.os }} - ${{ matrix.tox_version }}
    needs:
      - build
      - test
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu
          - windows
          - macos
        py:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - 3.11
        tox_version:
          - "<4.0.0"
          - ">=4.0.0"
      max-parallel: 4
    steps:
      - uses: actions/checkout@v3
        with:
          path: ./repo
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.py }}
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
      - shell: bash
        run: |
          pip install $(ls -t dist/*.whl | head -n1)
          pip install -r ./repo/requirements.txt
          pip install -U tox${{ matrix.tox_version }} pytest setuptools
      - shell: bash
        run: pytest ./repo/tests/functional

  publish-package:
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')) || github.event_name == 'release'
    name: Publish Package
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
      - build
      - sonarcloud
      - license-scan
      - codeql-analyze
      - test-build
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v4
      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U twine
      - name: Upload Packages
        run: |
              twine upload dist/*.whl --verbose
              twine upload dist/*.tar.gz --verbose
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        if: startsWith(github.ref, 'refs/tags')

  publish-docs:
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags')  && !(contains(github.ref, 'gh-pages') || contains(github.ref, 'docs')) ) || github.event_name == 'release'
    name: Publish Docs
    runs-on: ubuntu-latest
    needs:
      - docs
      - publish-package
    steps:
      - name: Download docs
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: ./docs/html
      - name: Get Version
        id: get_version
        run: |
          tag_name=$(echo ${{github.ref}} | cut -d/ -f3)
          echo "::set-output name=tag_name::$tag_name"
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html
          tag_name: docs-${{ steps.get_version.outputs.tag_name }}
          tag_message: 'Docs ${{ steps.get_version.outputs.tag_name }}'
